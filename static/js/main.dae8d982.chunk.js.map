{"version":3,"sources":["components/InputTask.tsx","components/OneTask.tsx","components/TaskList.tsx","App.tsx","index.tsx"],"names":["InputTask","task","setTask","handleSubmit","inputRef","useRef","className","onSubmit","e","current","blur","type","placeholder","value","ref","onChange","target","OneTask","index","tasks","setTasks","useState","edit","setEdit","editTask","setEditTask","useEffect","focus","draggableId","id","toString","provided","snapshot","preventDefault","map","handleEdit","draggableProps","dragHandleProps","innerRef","isDragging","isDone","onClick","filter","TaskList","CompletedTasks","setCompletedTasks","droppableId","isDraggingOver","droppableProps","App","console","log","onDragEnd","result","source","destination","add","active","complete","splice","Date","now","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dae8d982.chunk.js","sourcesContent":["import React, { useRef } from 'react'\nimport './styles.css'\n\n// Types\ninterface Props {\n\ttask: string\n\tsetTask: React.Dispatch<React.SetStateAction<string>>\n\thandleSubmit: (e: React.FormEvent) => void\n}\n\nconst InputTask = ({ task, setTask, handleSubmit }: Props) => {\n\tconst inputRef = useRef<HTMLInputElement>(null)\n\n\treturn (\n\t\t<form\n\t\t\tclassName=\"input\"\n\t\t\tonSubmit={(e) => {\n\t\t\t\thandleSubmit(e)\n\t\t\t\tinputRef.current?.blur()\n\t\t\t}}\n\t\t>\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tplaceholder=\"Enter a Task\"\n\t\t\t\tvalue={task}\n\t\t\t\tref={inputRef}\n\t\t\t\tonChange={(e) => setTask(e.target.value)}\n\t\t\t\tclassName=\"input__box\"\n\t\t\t/>\n\t\t\t<button type=\"submit\" className=\"input_submit\">\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t)\n}\n\nexport default InputTask\n","import React, { useEffect, useState } from 'react'\nimport { useRef } from 'react'\nimport { AiFillEdit, AiFillDelete } from 'react-icons/ai'\nimport { MdOutlineFileDownloadDone } from 'react-icons/md'\nimport { Task } from '../model/model'\nimport { Draggable } from 'react-beautiful-dnd'\n\ntype props = {\n\tindex: number\n\ttask: Task\n\ttasks: Task[]\n\tsetTasks: React.Dispatch<React.SetStateAction<Task[]>>\n}\n\nconst OneTask = ({ index, task, tasks, setTasks }: props) => {\n\tconst [edit, setEdit] = useState<boolean>(false)\n\tconst [editTask, setEditTask] = useState<string>(task.task)\n\n\tconst inputRef = useRef<HTMLInputElement>(null)\n\tuseEffect(() => {\n\t\tinputRef.current?.focus()\n\t}, [edit])\n\n\tconst handleEdit = (e: React.FormEvent, id: number) => {\n\t\te.preventDefault()\n\t\tsetTasks(\n\t\t\ttasks.map((task) => (task.id === id ? { ...task, task: editTask } : task))\n\t\t)\n\t\tsetEdit(false)\n\t}\n\n\tconst handleDelete = (id: number) => {\n\t\tsetTasks(tasks.filter((task) => task.id !== id))\n\t}\n\n\tconst handleDone = (id: number) => {\n\t\tsetTasks(\n\t\t\ttasks.map((task) =>\n\t\t\t\ttask.id === id ? { ...task, isDone: !task.isDone } : task\n\t\t\t)\n\t\t)\n\t}\n\n\treturn (\n\t\t<Draggable draggableId={task.id.toString()} index={index}>\n\t\t\t{(provided, snapshot) => (\n\t\t\t\t<form\n\t\t\t\t\tonSubmit={(e) => handleEdit(e, task.id)}\n\t\t\t\t\t{...provided.draggableProps}\n\t\t\t\t\t{...provided.dragHandleProps}\n\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\tclassName={`one__task ${snapshot.isDragging ? 'drag' : ''}`}\n\t\t\t\t>\n\t\t\t\t\t{edit ? (\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tvalue={editTask}\n\t\t\t\t\t\t\tonChange={(e) => setEditTask(e.target.value)}\n\t\t\t\t\t\t\tclassName=\"one__task--text\"\n\t\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : task.isDone ? (\n\t\t\t\t\t\t<s className=\"one__task--text\">{task.task}</s>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span className=\"one__task--text\">{task.task}</span>\n\t\t\t\t\t)}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName=\"icon\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (!edit && !task.isDone) {\n\t\t\t\t\t\t\t\t\tsetEdit(!edit)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AiFillEdit />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"icon\" onClick={() => handleDelete(task.id)}>\n\t\t\t\t\t\t\t<AiFillDelete />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span className=\"icon\" onClick={() => handleDone(task.id)}>\n\t\t\t\t\t\t\t<MdOutlineFileDownloadDone />\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t)}\n\t\t</Draggable>\n\t)\n}\n\nexport default OneTask\n","import React from 'react'\nimport { Task } from '../model/model'\nimport OneTask from './OneTask'\nimport { Droppable } from 'react-beautiful-dnd'\n\ninterface props {\n\ttasks: Task[]\n\tsetTasks: React.Dispatch<React.SetStateAction<Array<Task>>>\n\tCompletedTasks: Task[]\n\tsetCompletedTasks: React.Dispatch<React.SetStateAction<Array<Task>>>\n}\n\nconst TaskList = ({\n\ttasks,\n\tsetTasks,\n\tCompletedTasks,\n\tsetCompletedTasks,\n}: props) => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Droppable droppableId=\"TasksList\">\n\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`tasks ${\n\t\t\t\t\t\t\tsnapshot.isDraggingOver ? 'activeDrag' : 'open'\n\t\t\t\t\t\t}`}\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"tasks__heading\">Open / In Progress</span>\n\t\t\t\t\t\t{tasks?.map((task, index) => (\n\t\t\t\t\t\t\t<OneTask\n\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\ttasks={tasks}\n\t\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\t\tsetTasks={setTasks}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Droppable>\n\t\t\t<Droppable droppableId=\"TasksDone\">\n\t\t\t\t{(provided, snapshot) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={provided.innerRef}\n\t\t\t\t\t\t{...provided.droppableProps}\n\t\t\t\t\t\tclassName={`tasks  ${\n\t\t\t\t\t\t\tsnapshot.isDraggingOver ? 'completeDrag' : 'done'\n\t\t\t\t\t\t}`}\n\t\t\t\t\t>\n\t\t\t\t\t\t<span className=\"tasks__heading\">Done</span>\n\t\t\t\t\t\t{CompletedTasks?.map((task, index) => (\n\t\t\t\t\t\t\t<OneTask\n\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\ttasks={CompletedTasks}\n\t\t\t\t\t\t\t\ttask={task}\n\t\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\t\tsetTasks={setCompletedTasks}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t{provided.placeholder}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Droppable>\n\t\t</div>\n\t)\n}\n\nexport default TaskList\n","import React, { useState } from 'react'\nimport './App.css'\nimport InputTask from './components/InputTask'\nimport TaskList from './components/TaskList'\nimport { DragDropContext, DropResult } from 'react-beautiful-dnd'\nimport { Task } from './model/model'\n\nconst App: React.FC = () => {\n\t// state hooks\n\tconst [task, setTask] = useState<string>('')\n\tconst [tasks, setTasks] = useState<Task[]>([])\n\tconst [CompletedTasks, setCompletedTasks] = useState<Task[]>([])\n\n\tconsole.log(task)\n\n\t// handle Submit\n\tconst handleSubmit = (e: React.FormEvent) => {\n\t\te.preventDefault()\n\n\t\tif (task) {\n\t\t\tsetTasks([...tasks, { id: Date.now(), task, isDone: false }])\n\t\t\tsetTask('')\n\t\t}\n\t}\n\n\tconsole.log(tasks)\n\n\tconst onDragEnd = (result: DropResult) => {\n\t\tconst { source, destination } = result\n\n\t\tconsole.log(result)\n\n\t\tif (!destination) {\n\t\t\treturn\n\t\t}\n\n\t\tif (\n\t\t\tdestination.droppableId === source.droppableId &&\n\t\t\tdestination.index === source.index\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\tlet add\n\t\tlet active = tasks\n\t\tlet complete = CompletedTasks\n\n\t\t// Source Logic\n\t\tif (source.droppableId === 'TasksList') {\n\t\t\tadd = active[source.index]\n\t\t\tactive.splice(source.index, 1)\n\t\t} else {\n\t\t\tadd = complete[source.index]\n\t\t\tcomplete.splice(source.index, 1)\n\t\t}\n\n\t\t// Destination Logic\n\t\tif (destination.droppableId === 'TasksList') {\n\t\t\tactive.splice(destination.index, 0, add)\n\t\t} else {\n\t\t\tcomplete.splice(destination.index, 0, add)\n\t\t}\n\n\t\tsetCompletedTasks(complete)\n\t\tsetTasks(active)\n\t}\n\n\treturn (\n\t\t<DragDropContext onDragEnd={onDragEnd}>\n\t\t\t<div className=\"App\">\n\t\t\t\t<span className=\"heading\">React/Typescript Kanban Board</span>\n\t\t\t\t<InputTask task={task} setTask={setTask} handleSubmit={handleSubmit} />\n\t\t\t\t<TaskList\n\t\t\t\t\ttasks={tasks}\n\t\t\t\t\tsetTasks={setTasks}\n\t\t\t\t\tCompletedTasks={CompletedTasks}\n\t\t\t\t\tsetCompletedTasks={setCompletedTasks}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</DragDropContext>\n\t)\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}